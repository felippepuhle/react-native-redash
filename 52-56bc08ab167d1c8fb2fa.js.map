{"version":3,"sources":["webpack:///./src/pages/svg/parsePath.tsx"],"names":["ParsePathPage","title","code"],"mappings":"4FAAA,4CA0BA,UAtBMA,WAA0B,OAC9B,oCACE,uBAAKC,MADP,oBAGE,4BAHF,8CAKE,2BALF,6NAWE,uBACEC,KAb0B","file":"52-56bc08ab167d1c8fb2fa.js","sourcesContent":["import React from \"react\"\n\nimport { CodeHighlight, SEO } from \"src/components\"\n\nconst ParsePathPage: React.FC = () => (\n  <>\n    <SEO title=\"parsePath - SVG\" />\n\n    <h1>parsePath(SVGPath: String): ReanimatedPath</h1>\n\n    <p>\n      Given an SVG Path, returns a denormalized object of values that can be\n      used for animations on that path. From the perspective of the user, the\n      returned value should be considered a black box. Here is an example below:\n    </p>\n\n    <CodeHighlight\n      code={`\n// We get the data from the SVG Path denormalized a way that can be handled with Reanimated\nconst path = parsePath(d);\nconst { y, x } = getPointAtLength(path, length);\n      `}\n    />\n  </>\n)\n\nexport default ParsePathPage\n"],"sourceRoot":""}